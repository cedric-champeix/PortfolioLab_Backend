// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  email     String    @unique
  pwd       String
  role      String
  firstName String
  lastName  String
  address   Address?
  resume    Resume?   @relation(fields: [resumeId], references: [id])
  resumeId  String?   @db.ObjectId
  projects  Project[]
}

model Project {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  description  String
  imgURL       String
  contentURL   String
  contributors String[]
  skills       Skill[]
  User         User?    @relation(fields: [userId], references: [id])
  userId       String?  @db.ObjectId
}

model Resume {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  skills      Skill[]
  experiences Experience[]
  educations  Education[]
  socials     Social[]
  User        User[]
}

model Skill {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  descritpion String
  mastery     String
  logoURL     String
  isSoft      Boolean
  Resume      Resume?  @relation(fields: [resumeId], references: [id])
  resumeId    String?  @db.ObjectId
  Project     Project? @relation(fields: [projectId], references: [id])
  projectId   String?  @db.ObjectId
}

model Experience {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  company     String
  logoURL     String
  description String
  startDate   DateTime
  endDate     DateTime
  Resume      Resume?  @relation(fields: [resumeId], references: [id])
  resumeId    String?  @db.ObjectId
}

model Education {
  id             String  @id @default(auto()) @map("_id") @db.ObjectId
  formationName  String
  universityName String
  level          String
  logoURL        String
  Resume         Resume? @relation(fields: [resumeId], references: [id])
  resumeId       String? @db.ObjectId
}

model Social {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  logoURL  String
  link     String
  Resume   Resume? @relation(fields: [resumeId], references: [id])
  resumeId String? @db.ObjectId
}

type Address {
  street  String
  city    String
  state   String
  zip     String
  country String
}
